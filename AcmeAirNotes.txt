When running AcmeAir keep these things in check:

1. Mongodb
Only 5.0.15 works with this version of acmeair so better to run in containers
DockerFile:
FROM docker.io/library/mongo:5.0.15
COPY AcmeAirDBBackup /AcmeAirDBBackup

Commands:
docker run --rm -d --name mongodb --network=host mongo-acmeair-ee8:5.0.15 --nojournal
docker exec -it mongodb mongorestore --drop /AcmeAirDBBackup

2. Liberty
Download the Liberty packages from here: https://repo1.maven.org/maven2/io/openliberty/openliberty-runtime/23.0.0.11/

Docker Files which will help in undersatdning whats being done: https://github.com/OpenLiberty/ci.docker/blob/fd371711bc8e08bf03aa163d44b76f76efff1b36/releases/23.0.0.12/full/Dockerfile.ubuntu.openjdk17
https://github.com/openliberty/ci.docker

On the Liberty side we need to launch a server: Lets says name acmeairee8.
/home/new_dev/Liberty/openliberty/wlp/bin/server create acmeairee8
and then go to: /home/new_dev/Liberty/openliberty/wlp/usr/servers/acmeairee8 and edit the server.xml to look like this.

<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">
    <!-- Enable features -->
    <featureManager>
         <feature>cdi-2.0</feature>
         <feature>jaxrs-2.1</feature>
    </featureManager>

    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
                  host="*"
                  httpPort="9080"
                  httpsPort="9443" />

    <webApplication name="acmeair-monolithic" location="acmeair-java-2.0.0-SNAPSHOT.war" contextRoot="/"/>
</server>

Copy the acmeair-java-2.0.0-SNAPSHOT.war into the apps folder at /home/new_dev/Liberty/openliberty/wlp/usr/servers/acmeairee8/apps
export MONGO_HOST="mongodb"
export MONGO_PORT="27017"
export MONGO_DBNAME="acmeair"

start the server: /home/new_dev/Liberty/openliberty/wlp/bin/server start acmeairee8

Check the messages.log at /home/new_dev/Liberty/openliberty/wlp/usr/servers/acmeairee8/logs to confirm if the server started without any errors.

3. JMeter

wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.3.tgz
tar -xzf apache-jmeter-5.3.tgz
# Set jmeter home, add jmeter to the PATH and set JVM options
export JMETER_HOME="/jmeter/apache-jmeter-$JMETER_VERSION"
# Add jmeter to the PATH
export PATH="$JMETER_HOME/bin:$PATH"
# Set JVM options
export JVM_ARGS "-Xms1g -Xmx1g"

echo 'summariser.interval=6' >> $JMETER_HOME/bin/jmeter.properties
echo 'CookieManager.save.cookies=true' >> $JMETER_HOME/bin/jmeter.properties

# Copy the script to be executed and other needed files
cp DriverFiles/AcmeAir-v5.jmx $JMETER_HOME/AcmeAir-v5.jmx
cp DriverFiles/Airports.csv $JMETER_HOME/Airports.csv
cp DriverFiles/Airports2.csv $JMETER_HOME/Airports2.csv
cp DriverFiles/hosts.csv $JMETER_HOME/hosts.csv
cp DriverFiles/json-simple-1.1.1.jar $JMETER_HOME/lib/ext/
cp DriverFiles/acmeair-jmeter-2.0.0-SNAPSHOT.jar $JMETER_HOME/lib/ext/
cp DriverFiles/applyLoad.sh $JMETER_HOME/bin/applyLoad.sh
chmod u+x $JMETER_HOME/bin/applyLoad.sh

To get logs edit log4j2.xml to include the logs then the logs will be defaulted to jmeter.log. You can edit this file name and location by passing -j /output/acmeair.stats.0 to the jmeter command.

jmeter -n -DusePureIDs=true -t ../AcmeAir-v5.jmx -JHOST=localhost -JPORT=9080 -JUSERBOTTOM=0 -JUSER=199 -JURL=/ -JTHREAD=10 -JDURATION=300 -JRAMP=0

4. Other
--network=host passed to the docker run command runs the process on localhost. If the address is already in use the run might fail. Kill any unwanted process listening on the required port
sudo lsof -iTCP -sTCP:LISTEN -n -P

Run the container in non-detached mode with -it to debug the failure.

Docker run command quits immediately. The best way to debug the container always try to run in attached mode, As you can run the container in two ways.
Foreground: In foreground mode, docker run with -it can start the process in the container and attach the console to the processâ€™s standard input, output, and standard error. So in the foreground, you can see the output or also if there is an error during boot time.

Always run the container in the foreground for debugging purpose.
docker run --rm -it --name mongodb --network=host mongo-acmeair-ee8:5.0.15 --nojournal

Detached mode: shown by the option --detach or -d, means that a Docker container runs in the background of your terminal. It does not receive input or display output
{"t":{"$date":"2024-01-03T19:04:10.512+00:00"},"s":"E",  "c":"CONTROL",  "id":20568,   "ctx":"initandlisten","msg":"Error setting up listener","attr":{"error":{"code":9001,"codeName":"SocketException","errmsg":"Address already in use"}}}

You can kill the previous mongod instance and start the new one.

To kill the previous mongod instance, first search for a list of tasks running on your machine by typing,
sudo lsof -iTCP -sTCP:LISTEN -n -P

Search for mongod COMMAND and its PID and type,
sudo kill <mongo_command_pid>

Now start your mongod instance by typing,
You can see MongoDB running successfully.

